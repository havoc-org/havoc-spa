import './NavBar.css';
import { useContext, useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { AuthContext } from '../../contexts/AuthContext';
import ProfilePopup from '../ProfilePopup/ProfilePopup';

export default function NavBar() {
  const { user, logout } = useContext(AuthContext);
  const [showPopup, setShowPopup] = useState(false);
  const [theme, setTheme] = useState(() => {
    const savedTheme = localStorage.getItem('theme');
    return savedTheme || 'dark';
  });

  const Buttons = user?.token ? ButtonsLoggedIn : ButtonsNotLoggedIn;

  useEffect(() => {
    document.documentElement.setAttribute('data-theme', theme);
  }, [theme]);

  useEffect(() => {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme) {
      setTheme(savedTheme);
    }
  }, []);

  const toggleTheme = () => {
    setTheme(prev => {
      const newTheme = prev === 'dark' ? 'light' : 'dark';
      localStorage.setItem('theme', newTheme);
      return newTheme;
    });
  };

  return (
    <nav className="outer">
      <link
        href="https://fonts.googleapis.com/css?family=Akronim"
        rel="stylesheet"
      ></link>
      <ul>
        <li className="nav-link">
          <Link to="/">
            <div className="navbar-logo" >
              <LogoIcon />
            </div>

          </Link>
        </li>
        <li className="nav-links">
          <Buttons
            theme={theme}
            onClickTheme={toggleTheme}
            onLogOut={logout}
            onProfileClick={() => setShowPopup(!showPopup)}
          />
        </li>
      </ul>

      {showPopup && (
        <ProfilePopup user={user} onClose={() => setShowPopup(false)} />
      )}
    </nav>
  );
}

const ThemeIcon = ({ theme }) => (
  <svg
    className="navbar-button"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    {theme === 'dark' ? (
      <path d="M21.5302 15.93C21.3702 15.66 20.9202 15.24 19.8002 15.44C19.1802 15.55 18.5502 15.6 17.9202 15.57C15.5902 15.47 13.4802 14.4 12.0102 12.75C10.7102 11.3 9.9102 9.40999 9.9002 7.36999C9.9002 6.22999 10.1202 5.12999 10.5702 4.08999C11.0102 3.07999 10.7002 2.54999 10.4802 2.32999C10.2502 2.09999 9.7102 1.77999 8.6502 2.21999C4.5602 3.93999 2.0302 8.03999 2.3302 12.43C2.6302 16.56 5.5302 20.09 9.3702 21.42C10.2902 21.74 11.2602 21.93 12.2602 21.97C12.4202 21.98 12.5802 21.99 12.7402 21.99C16.0902 21.99 19.2302 20.41 21.2102 17.72C21.8802 16.79 21.7002 16.2 21.5302 15.93Z" />
    ) : (
      <path d="M12 18a6 6 0 1 1 0-12 6 6 0 0 1 0 12zm0-2a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM11 1h2v3h-2V1zm0 19h2v3h-2v-3zM3.515 4.929l1.414-1.414L7.05 5.636 5.636 7.05 3.515 4.93zM16.95 18.364l1.414-1.414 2.121 2.121-1.414 1.414-2.121-2.121zm2.121-14.85l1.414 1.415-2.121 2.121-1.414-1.414 2.121-2.121zM5.636 16.95l1.414 1.414-2.121 2.121-1.414-1.414 2.121-2.121zM23 11v2h-3v-2h3zM4 11v2H1v-2h3z" />
    )}
  </svg>
);

const LogoIcon = () => (
  <svg
    className="navbar-logo"
    width="180px"
    height="65px"
    viewBox="0 0 793 241"
    fill="currentColor"

  >
    <g>
      <path fill="currentColor" d="M 546.5,4.5 C 614.984,0.369643 682.317,7.20298 748.5,25C 751.112,25.6395 753.446,26.8062 755.5,28.5C 755.192,29.3081 754.692,29.9747 754,30.5C 693.105,16.3306 632.105,15.9973 571,29.5C 547.59,20.8843 523.423,15.7177 498.5,14C 497.663,12.9887 497.33,11.8221 497.5,10.5C 513.899,7.90169 530.232,5.90169 546.5,4.5 Z" />
    </g>
    <g>
      <path fill="currentColor" d="M 410.5,16.5 C 467.294,14.7587 521.461,25.7587 573,49.5C 607.011,38.7577 641.845,34.591 677.5,37C 714.139,39.0769 749.806,46.0769 784.5,58C 787.032,58.6122 787.865,60.1122 787,62.5C 728.013,47.0022 668.847,46.5022 609.5,61C 599.987,64.1711 590.487,67.3378 581,70.5C 517.883,37.0769 450.717,23.9103 379.5,31C 343.809,33.6368 309.475,41.8034 276.5,55.5C 275.833,55.3333 275.167,55.1667 274.5,55C 277.659,51.9177 281.325,49.5843 285.5,48C 325.275,29.4731 366.942,18.9731 410.5,16.5 Z" />
    </g>
    <g><path fill="currentColor" d="M 425.5,47.5 C 454.744,46.1829 482.744,51.3496 509.5,63C 499.607,65.0196 490.274,68.5196 481.5,73.5C 469.895,67.1304 457.562,62.6304 444.5,60C 431.111,57.7013 417.777,55.7013 404.5,54C 405.167,53.3333 405.833,52.6667 406.5,52C 412.89,50.1601 419.224,48.6601 425.5,47.5 Z" /></g>
    <g><path fill="currentColor" d="M 644.5,69.5 C 645.573,70.2506 645.74,71.2506 645,72.5C 631.587,93.2471 614.754,110.747 594.5,125C 591.5,126.5 588.5,128 585.5,129.5C 582.833,126.5 580.167,123.5 577.5,120.5C 594.578,108.924 609.244,94.7571 621.5,78C 629.161,74.8389 636.827,72.0056 644.5,69.5 Z" /></g>
    <g><path fill="currentColor" d="M 710.5,69.5 C 738.533,66.2333 762.699,74.2333 783,93.5C 787.615,100.908 786.782,107.741 780.5,114C 773.812,118.541 767.145,118.541 760.5,114C 739.941,97.2114 717.941,95.2114 694.5,108C 672.449,125.156 665.949,146.99 675,173.5C 684.816,195.164 701.65,206.498 725.5,207.5C 731.713,207.424 737.713,206.257 743.5,204C 751.114,200.033 758.447,195.7 765.5,191C 776.849,189.529 783.515,194.362 785.5,205.5C 784.825,208.691 783.658,211.691 782,214.5C 756.407,237.685 727.241,243.518 694.5,232C 654.715,212.609 637.215,180.776 642,136.5C 651.196,100.136 674.03,77.8028 710.5,69.5 Z" /></g>
    <g><path fill="currentColor" d="M 17.5,72.5 C 26.5915,71.9489 32.4248,75.9489 35,84.5C 35.4999,103.164 35.6666,121.83 35.5,140.5C 57.5,140.5 79.5,140.5 101.5,140.5C 101.333,121.83 101.5,103.164 102,84.5C 107.241,72.4202 115.574,69.7535 127,76.5C 129.146,79.1258 130.479,82.1258 131,85.5C 131.667,132.167 131.667,178.833 131,225.5C 127.527,235.23 120.693,238.73 110.5,236C 107.333,234.167 104.833,231.667 103,228.5C 101.562,208.88 101.062,189.213 101.5,169.5C 79.5,169.5 57.5,169.5 35.5,169.5C 35.9634,189.234 35.4634,208.901 34,228.5C 28.7723,236.557 21.6057,238.724 12.5,235C 9.89408,233.062 8.06075,230.562 7,227.5C 6.23753,179.833 5.9042,132.166 6,84.5C 8.01885,78.6498 11.8522,74.6498 17.5,72.5 Z" /></g>
    <g><path fill="currentColor" d="M 222.5,72.5 C 228.847,73.0888 233.68,76.0888 237,81.5C 258.853,127.38 280.519,173.38 302,219.5C 302.174,234.311 295.007,239.811 280.5,236C 278,234.833 276.167,233 275,230.5C 269.992,221.489 265.825,212.155 262.5,202.5C 237.811,201.542 213.311,201.209 189,201.5C 187.795,202.071 186.628,202.738 185.5,203.5C 181.606,212.289 177.439,220.955 173,229.5C 165.959,238.443 157.959,239.443 149,232.5C 145.299,227.221 144.632,221.555 147,215.5C 169.716,168.971 192.216,122.471 214.5,76C 217.158,74.522 219.825,73.3554 222.5,72.5 Z M 224.5,124.5 C 232.438,140.118 240.105,155.951 247.5,172C 232.156,172.833 216.822,172.666 201.5,171.5C 208.924,155.653 216.591,139.986 224.5,124.5 Z" /></g>
    <g><path fill="currentColor" d="M 291.5,72.5 C 297.932,71.347 303.432,73.0137 308,77.5C 327.787,117.073 347.62,156.74 367.5,196.5C 387.603,157.294 407.436,117.961 427,78.5C 434.645,70.8876 442.645,70.5543 451,77.5C 453.374,81.8935 454.041,86.5602 453,91.5C 429.047,137.74 405.381,184.073 382,230.5C 373.814,238.43 364.648,239.596 354.5,234C 352.3,231.766 350.467,229.266 349,226.5C 327.738,182.256 306.072,138.256 284,94.5C 280.056,84.932 282.556,77.5987 291.5,72.5 Z" /></g>
    <g><path fill="currentColor" d="M 526.5,79.5 C 544.449,78.5769 561.783,81.4103 578.5,88C 579.956,88.4226 580.456,89.2559 580,90.5C 575.312,94.6886 570.479,98.6886 565.5,102.5C 546.006,95.1753 526.339,94.6753 506.5,101C 477.981,114.534 465.481,137.034 469,168.5C 476.977,199.24 496.81,213.407 528.5,211C 549.897,206.199 561.23,192.866 562.5,171C 561.86,152.371 552.527,141.038 534.5,137C 521.631,135.351 512.131,140.184 506,151.5C 502.135,161.915 504.968,169.748 514.5,175C 526.337,177.156 531.837,172.323 531,160.5C 529.167,157.333 526.667,154.833 523.5,153C 532.43,150.729 537.93,154.229 540,163.5C 541.323,173.846 537.157,181.013 527.5,185C 509.267,188.634 497.767,181.467 493,163.5C 491.387,146.558 498.22,134.391 513.5,127C 540.035,118.617 559.535,126.784 572,151.5C 581.052,187.233 568.219,211.067 533.5,223C 494.97,228.152 469.47,212.319 457,175.5C 449.988,134.356 465.155,104.523 502.5,86C 510.463,83.1785 518.463,81.0118 526.5,79.5 Z" /></g>
    <g><path fill="currentColor" d="M 630.5,114.5 C 631.156,115.622 631.489,116.955 631.5,118.5C 630.354,128.374 629.354,138.208 628.5,148C 613.729,153.693 598.562,155.86 583,154.5C 582.689,152.444 582.189,150.444 581.5,148.5C 603.292,144.791 619.626,133.457 630.5,114.5 Z" /></g>
    <g><path fill="currentColor" d="M 628.5,175.5 C 629.497,175.47 630.164,175.97 630.5,177C 632.285,181.53 633.952,186.03 635.5,190.5C 619.941,191.358 604.608,190.024 589.5,186.5C 589.357,184.738 589.691,183.071 590.5,181.5C 598.479,180.668 606.479,180.168 614.5,180C 619.577,179.405 624.244,177.905 628.5,175.5 Z" /></g>
    <g><path fill="currentColor" d="M 593.5,199.5 C 593.917,198.876 594.584,198.543 595.5,198.5C 603.419,200.973 611.419,203.14 619.5,205C 627.167,205.333 634.833,205.667 642.5,206C 646.938,212.275 651.938,218.108 657.5,223.5C 637.341,223.395 618.674,217.895 601.5,207C 598.308,204.972 595.641,202.472 593.5,199.5 Z" /></g>

  </svg>
);

const BellIcon = () => (
  <svg
    className="navbar-button"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="M19.3556 14.49L18.3556 12.83C18.1456 12.46 17.9556 11.76 17.9556 11.35V8.82C17.9556 6.47 16.5756 4.44 14.5856 3.49C14.0656 2.57 13.1056 2 12.0056 2C10.9156 2 9.93557 2.59 9.41557 3.52C7.46557 4.49 6.11557 6.5 6.11557 8.82V11.35C6.11557 11.76 5.92557 12.46 5.71557 12.82L4.70557 14.49C4.30557 15.16 4.21557 15.9 4.46557 16.58C4.70557 17.25 5.27557 17.77 6.01557 18.02C7.95557 18.68 9.99557 19 12.0356 19C14.0756 19 16.1156 18.68 18.0556 18.03C18.7556 17.8 19.2956 17.27 19.5556 16.58C19.8156 15.89 19.7456 15.13 19.3556 14.49Z" />
    <path d="M14.8456 20.01C14.4256 21.17 13.3156 22 12.0156 22C11.2256 22 10.4456 21.68 9.89556 21.11C9.57556 20.81 9.33556 20.41 9.19556 20C9.32556 20.02 9.45556 20.03 9.59556 20.05C9.82556 20.08 10.0656 20.11 10.3056 20.13C10.8756 20.18 11.4556 20.21 12.0356 20.21C12.6056 20.21 13.1756 20.18 13.7356 20.13C13.9456 20.11 14.1556 20.1 14.3556 20.07C14.5156 20.05 14.6756 20.03 14.8456 20.01Z" />
  </svg>
);


const ProfileIcon = () => (
  <svg
    className="navbar-button"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="M12 12C14.7614 12 17 9.76142 17 7C17 4.23858 14.7614 2 12 2C9.23858 2 7 4.23858 7 7C7 9.76142 9.23858 12 12 12Z" />
    <path d="M11.9999 14.5C6.98991 14.5 2.90991 17.86 2.90991 22C2.90991 22.28 3.12991 22.5 3.40991 22.5H20.5899C20.8699 22.5 21.0899 22.28 21.0899 22C21.0899 17.86 17.0099 14.5 11.9999 14.5Z" />
  </svg>
);

const ExitIcon = () => (
  <svg
    className="navbar-button"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="M7.87999 12.07C7.87999 11.66 8.21999 11.32 8.62999 11.32H14.11V2.86C14.1 2.38 13.72 2 13.24 2C7.34999 2 3.23999 6.11 3.23999 12C3.23999 17.89 7.34999 22 13.24 22C13.71 22 14.1 21.62 14.1 21.14V12.81H8.62999C8.20999 12.82 7.87999 12.48 7.87999 12.07Z" />
    <path d="M20.54 11.54L17.7 8.69003C17.41 8.40003 16.93 8.40003 16.64 8.69003C16.35 8.98003 16.35 9.46003 16.64 9.75003L18.2 11.31H14.1V12.81H18.19L16.63 14.37C16.34 14.66 16.34 15.14 16.63 15.43C16.78 15.58 16.97 15.65 17.16 15.65C17.35 15.65 17.54 15.58 17.69 15.43L20.53 12.58C20.83 12.3 20.83 11.83 20.54 11.54Z" />
  </svg>
);



const HomeIcon = () => (
  <svg
    className="navbar-button"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="M12.7156 16.88H13.4156C14.5656 16.88 15.5056 15.94 15.5056 14.79V14.09H12.7156V16.88Z" />
    <path d="M8.52563 14.79C8.52563 15.94 9.46563 16.88 10.6156 16.88H11.3156V14.09H8.52563V14.79Z" />
    <path d="M8.52563 12V12.7H11.3156V9.91003H10.6156C9.46563 9.91003 8.52563 10.85 8.52563 12Z" />
    <path d="M20.0456 6.82006L14.2956 2.79006C12.7256 1.69006 10.3256 1.75006 8.81563 2.92006L3.80562 6.83006C2.79562 7.61006 2.01562 9.21006 2.01562 10.4701V17.3701C2.01562 19.9201 4.08563 22.0001 6.62563 22.0001H17.3956C19.9356 22.0001 22.0056 19.9301 22.0056 17.3801V10.6001C22.0156 9.25006 21.1456 7.59006 20.0456 6.82006ZM16.8956 14.7901C16.8956 16.7101 15.3256 18.2801 13.4056 18.2801H10.6156C8.69563 18.2801 7.12563 16.7201 7.12563 14.7901V12.0001C7.12563 10.0801 8.69563 8.51006 10.6156 8.51006H13.4056C15.3256 8.51006 16.8956 10.0701 16.8956 12.0001V14.7901Z" />
    <path d="M13.4156 9.91003H12.7156V12.7H15.5056V12C15.5056 10.85 14.5656 9.91003 13.4156 9.91003Z" />
  </svg>
);

function ButtonsNotLoggedIn({ theme, onClickTheme }) {
  return (
    <ul className="nav-links-list">
      <li className="nav-link">
        <button className="tab-button" onClick={onClickTheme}>
          <ThemeIcon theme={theme} />
        </button>
      </li>
      <li className="nav-link">
        <Link to="/login">
          <button className="login-button register-button">Sign In</button>
        </Link>
      </li>
      <li className="nav-link">
        <Link to="/register">
          <button className="register-button signup-button">Sign Up</button>
        </Link>
      </li>
    </ul>
  );
}

function ButtonsLoggedIn({ theme, onClickTheme, onLogOut, onProfileClick }) {
  return (
    <ul className="nav-links-list">
      <li className="nav-link">
        <button className="tab-button" onClick={onClickTheme}>
          <ThemeIcon theme={theme} />
        </button>
      </li>
      <li className="nav-link">
        <Link to="/projects">
          <button className="tab-button">
            <HomeIcon />
          </button>
        </Link>
      </li>
      <li className="nav-link">
        <button className="tab-button" onClick={onProfileClick}>
          <ProfileIcon />
        </button>
      </li>
      <li className="nav-link">
        <Link to="/">
          <button className="no-button tab-button" onClick={onLogOut}>
            <ExitIcon />
          </button>
        </Link>
      </li>
    </ul>
  );
}